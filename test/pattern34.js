const {
  loadFixture,
} = require("@nomicfoundation/hardhat-toolbox/network-helpers");
const { expect } = require("chai");

describe("Pattern 34", function () {
  // We define a fixture to reuse the same setup in every test.
  // We use loadFixture to run this setup once, snapshot that state,
  // and reset Hardhat Network to that snapshot in every test.
  async function deployPattern() {
    const [owner] = await ethers.getSigners();

    const Pattern = await ethers.getContractFactory("StripePatternV3");
    const pattern = await Pattern.deploy();

    return { pattern, owner };
  }
  
  describe('getSvgData', async function () {
    it("should retrieve pattern", async function () {

      const P1_SVG = '<svg width="500" height="500" xmlns="http://www.w3.org/2000/svg" style="background-color:#F2CAA8;"><rect x="34" y="0" width="38" height="500" fill="#8A7D5D" /><rect x="32" y="0" width="19" height="500" fill="#193026" /><rect x="178" y="0" width="57" height="500" fill="#6E6A50" /><rect x="307" y="0" width="27" height="500" fill="#DBB68A" /><rect x="238" y="0" width="55" height="500" fill="#193026" /><rect x="172" y="0" width="22" height="500" fill="#8A7D5D" /><rect x="395" y="0" width="46" height="500" fill="#6E6A50" /><rect x="337" y="0" width="34" height="500" fill="#DBB68A" /><rect x="47" y="0" width="36" height="500" fill="#C1A479" /><rect x="363" y="0" width="36" height="500" fill="#6E6A50" /><rect x="99" y="0" width="58" height="500" fill="#DBB68A" /><rect x="71" y="0" width="47" height="500" fill="#DBB68A" /><rect x="363" y="0" width="49" height="500" fill="#DBB68A" /><rect x="287" y="0" width="27" height="500" fill="#6E6A50" /><rect x="231" y="0" width="29" height="500" fill="#515642" /><rect x="375" y="0" width="20" height="500" fill="#193026" /><rect x="303" y="0" width="20" height="500" fill="#C1A479" /><rect x="125" y="0" width="22" height="500" fill="#193026" /><rect x="333" y="0" width="59" height="500" fill="#DBB68A" /><rect x="207" y="0" width="51" height="500" fill="#354334" /><rect x="55" y="0" width="24" height="500" fill="#A6916B" /><rect x="40" y="0" width="53" height="500" fill="#515642" /><rect x="106" y="0" width="55" height="500" fill="#193026" /><rect x="403" y="0" width="57" height="500" fill="#515642" /><rect x="256" y="0" width="50" height="500" fill="#DBB68A" /><rect x="235" y="0" width="42" height="500" fill="#DBB68A" /><rect x="73" y="0" width="41" height="500" fill="#6E6A50" /><rect x="63" y="0" width="23" height="500" fill="#8A7D5D" /><rect x="319" y="0" width="28" height="500" fill="#193026" /><rect x="14" y="0" width="46" height="500" fill="#515642" /><rect x="251" y="0" width="48" height="500" fill="#C1A479" /><rect x="480" y="0" width="15" height="500" fill="#6E6A50" /><rect x="292" y="0" width="54" height="500" fill="#193026" /><rect x="185" y="0" width="17" height="500" fill="#C1A479" /><rect x="257" y="0" width="38" height="500" fill="#354334" /><rect x="41" y="0" width="38" height="500" fill="#515642" /><rect x="251" y="0" width="43" height="500" fill="#8A7D5D" /><rect x="445" y="0" width="42" height="500" fill="#6E6A50" /><rect x="387" y="0" width="48" height="500" fill="#354334" /><rect x="56" y="0" width="53" height="500" fill="#A6916B" /><rect x="299" y="0" width="29" height="500" fill="#DBB68A" /><rect x="420" y="0" width="37" height="500" fill="#C1A479" /><rect x="215" y="0" width="56" height="500" fill="#354334" /><rect x="391" y="0" width="33" height="500" fill="#6E6A50" /><rect x="389" y="0" width="32" height="500" fill="#8A7D5D" /><rect x="97" y="0" width="10" height="500" fill="#DBB68A" /><rect x="1" y="0" width="21" height="500" fill="#C1A479" /><rect x="23" y="0" width="41" height="500" fill="#8A7D5D" /><rect x="165" y="0" width="43" height="500" fill="#A6916B" /><rect x="305" y="0" width="43" height="500" fill="#A6916B" /><rect x="391" y="0" width="38" height="500" fill="#193026" /><rect x="1" y="0" width="51" height="500" fill="#C1A479" /><rect x="236" y="0" width="59" height="500" fill="#193026" /><rect x="372" y="0" width="48" height="500" fill="#354334" /><rect x="159" y="0" width="17" height="500" fill="#DBB68A" /><rect x="90" y="0" width="18" height="500" fill="#C1A479" /><rect x="105" y="0" width="51" height="500" fill="#DBB68A" /><rect x="116" y="0" width="15" height="500" fill="#354334" /><rect x="256" y="0" width="48" height="500" fill="#C1A479" /><rect x="8" y="0" width="48" height="500" fill="#193026" /><rect x="351" y="0" width="49" height="500" fill="#8A7D5D" /><rect x="421" y="0" width="56" height="500" fill="#C1A479" /><rect x="452" y="0" width="19" height="500" fill="#6E6A50" /><rect x="164" y="0" width="43" height="500" fill="#193026" /><rect x="285" y="0" width="32" height="500" fill="#C1A479" /><rect x="154" y="0" width="41" height="500" fill="#A6916B" /><rect x="305" y="0" width="37" height="500" fill="#193026" /><rect x="353" y="0" width="31" height="500" fill="#193026" /><rect x="303" y="0" width="32" height="500" fill="#DBB68A" /><rect x="55" y="0" width="19" height="500" fill="#DBB68A" /><rect x="215" y="0" width="59" height="500" fill="#354334" /><rect x="402" y="0" width="31" height="500" fill="#C1A479" /><rect x="423" y="0" width="55" height="500" fill="#354334" /><rect x="228" y="0" width="22" height="500" fill="#6E6A50" /><rect x="244" y="0" width="41" height="500" fill="#C1A479" /><rect x="264" y="0" width="23" height="500" fill="#193026" /><rect x="317" y="0" width="13" height="500" fill="#354334" /><rect x="140" y="0" width="28" height="500" fill="#354334" /><rect x="16" y="0" width="28" height="500" fill="#A6916B" /><rect x="418" y="0" width="13" height="500" fill="#6E6A50" /><rect x="382" y="0" width="60" height="500" fill="#6E6A50" /><rect x="126" y="0" width="52" height="500" fill="#515642" /><rect x="288" y="0" width="22" height="500" fill="#515642" /><rect x="79" y="0" width="52" height="500" fill="#8A7D5D" /><rect x="308" y="0" width="15" height="500" fill="#515642" /><rect x="331" y="0" width="55" height="500" fill="#8A7D5D" /><rect x="9" y="0" width="55" height="500" fill="#8A7D5D" /><rect x="400" y="0" width="56" height="500" fill="#A6916B" /><rect x="263" y="0" width="46" height="500" fill="#C1A479" /><rect x="268" y="0" width="41" height="500" fill="#515642" /><rect x="57" y="0" width="29" height="500" fill="#6E6A50" /><rect x="32" y="0" width="54" height="500" fill="#6E6A50" /><rect x="265" y="0" width="46" height="500" fill="#A6916B" /><rect x="464" y="0" width="12" height="500" fill="#515642" /><rect x="253" y="0" width="49" height="500" fill="#8A7D5D" /><rect x="124" y="0" width="19" height="500" fill="#6E6A50" /><rect x="138" y="0" width="31" height="500" fill="#6E6A50" /><rect x="24" y="0" width="48" height="500" fill="#354334" /><rect x="132" y="0" width="44" height="500" fill="#515642" /><rect x="379" y="0" width="56" height="500" fill="#6E6A50" /></svg>'

      // deploy smart contract with default values
      const { pattern, owner } = await loadFixture(deployPattern);
        // Call generatePattern first
        await pattern.generatePattern(1);
      const svg = await pattern.getSvgData()
      console.log(svg);  // This will log the actual SVG output to the console
      // we want the correct SVG
      expect(svg).to.equal(P1_SVG);
    });
  })

});
