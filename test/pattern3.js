const {
  loadFixture,
} = require("@nomicfoundation/hardhat-toolbox/network-helpers");
const { expect } = require("chai");

describe("Pattern 3", function () {
  async function deployPattern() {
    const [owner] = await ethers.getSigners();

    const Pattern = await ethers.getContractFactory("GradientPattern");
    const pattern = await Pattern.deploy();

    return { pattern, owner };
  }
  
  describe('getSvgData', async function () {
    it("should retrieve pattern", async function () {

      // Update this SVG to match the expected output of the GradientPattern contract
      const P1_SVG = '<svg width="100" height="100" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" width="10" height="10" fill="rgb(246,123,82)" /><rect x="10" y="0" width="10" height="10" fill="rgb(123,82,61)" /><rect x="20" y="0" width="10" height="10" fill="rgb(82,61,151)" /><rect x="30" y="0" width="10" height="10" fill="rgb(61,151,41)" /><rect x="40" y="0" width="10" height="10" fill="rgb(151,41,181)" /><rect x="50" y="0" width="10" height="10" fill="rgb(41,181,158)" /><rect x="60" y="0" width="10" height="10" fill="rgb(181,158,198)" /><rect x="70" y="0" width="10" height="10" fill="rgb(158,198,75)" /><rect x="80" y="0" width="10" height="10" fill="rgb(198,75,255)" /><rect x="90" y="0" width="10" height="10" fill="rgb(75,255,20)" /><rect x="0" y="10" width="10" height="10" fill="rgb(123,82,61)" /><rect x="10" y="10" width="10" height="10" fill="rgb(82,61,151)" /><rect x="20" y="10" width="10" height="10" fill="rgb(61,151,41)" /><rect x="30" y="10" width="10" height="10" fill="rgb(151,41,181)" /><rect x="40" y="10" width="10" height="10" fill="rgb(41,181,158)" /><rect x="50" y="10" width="10" height="10" fill="rgb(181,158,198)" /><rect x="60" y="10" width="10" height="10" fill="rgb(158,198,75)" /><rect x="70" y="10" width="10" height="10" fill="rgb(198,75,255)" /><rect x="80" y="10" width="10" height="10" fill="rgb(75,255,20)" /><rect x="90" y="10" width="10" height="10" fill="rgb(255,20,97)" /><rect x="0" y="20" width="10" height="10" fill="rgb(82,61,151)" /><rect x="10" y="20" width="10" height="10" fill="rgb(61,151,41)" /><rect x="20" y="20" width="10" height="10" fill="rgb(151,41,181)" /><rect x="30" y="20" width="10" height="10" fill="rgb(41,181,158)" /><rect x="40" y="20" width="10" height="10" fill="rgb(181,158,198)" /><rect x="50" y="20" width="10" height="10" fill="rgb(158,198,75)" /><rect x="60" y="20" width="10" height="10" fill="rgb(198,75,255)" /><rect x="70" y="20" width="10" height="10" fill="rgb(75,255,20)" /><rect x="80" y="20" width="10" height="10" fill="rgb(255,20,97)" /><rect x="90" y="20" width="10" height="10" fill="rgb(20,97,90)" /><rect x="0" y="30" width="10" height="10" fill="rgb(61,151,41)" /><rect x="10" y="30" width="10" height="10" fill="rgb(151,41,181)" /><rect x="20" y="30" width="10" height="10" fill="rgb(41,181,158)" /><rect x="30" y="30" width="10" height="10" fill="rgb(181,158,198)" /><rect x="40" y="30" width="10" height="10" fill="rgb(158,198,75)" /><rect x="50" y="30" width="10" height="10" fill="rgb(198,75,255)" /><rect x="60" y="30" width="10" height="10" fill="rgb(75,255,20)" /><rect x="70" y="30" width="10" height="10" fill="rgb(255,20,97)" /><rect x="80" y="30" width="10" height="10" fill="rgb(20,97,90)" /><rect x="90" y="30" width="10" height="10" fill="rgb(97,90,221)" /><rect x="0" y="40" width="10" height="10" fill="rgb(151,41,181)" /><rect x="10" y="40" width="10" height="10" fill="rgb(41,181,158)" /><rect x="20" y="40" width="10" height="10" fill="rgb(181,158,198)" /><rect x="30" y="40" width="10" height="10" fill="rgb(158,198,75)" /><rect x="40" y="40" width="10" height="10" fill="rgb(198,75,255)" /><rect x="50" y="40" width="10" height="10" fill="rgb(75,255,20)" /><rect x="60" y="40" width="10" height="10" fill="rgb(255,20,97)" /><rect x="70" y="40" width="10" height="10" fill="rgb(20,97,90)" /><rect x="80" y="40" width="10" height="10" fill="rgb(97,90,221)" /><rect x="90" y="40" width="10" height="10" fill="rgb(90,221,207)" /><rect x="0" y="50" width="10" height="10" fill="rgb(41,181,158)" /><rect x="10" y="50" width="10" height="10" fill="rgb(181,158,198)" /><rect x="20" y="50" width="10" height="10" fill="rgb(158,198,75)" /><rect x="30" y="50" width="10" height="10" fill="rgb(198,75,255)" /><rect x="40" y="50" width="10" height="10" fill="rgb(75,255,20)" /><rect x="50" y="50" width="10" height="10" fill="rgb(255,20,97)" /><rect x="60" y="50" width="10" height="10" fill="rgb(20,97,90)" /><rect x="70" y="50" width="10" height="10" fill="rgb(97,90,221)" /><rect x="80" y="50" width="10" height="10" fill="rgb(90,221,207)" /><rect x="90" y="50" width="10" height="10" fill="rgb(221,207,134)" /><rect x="0" y="60" width="10" height="10" fill="rgb(181,158,198)" /><rect x="10" y="60" width="10" height="10" fill="rgb(158,198,75)" /><rect x="20" y="60" width="10" height="10" fill="rgb(198,75,255)" /><rect x="30" y="60" width="10" height="10" fill="rgb(75,255,20)" /><rect x="40" y="60" width="10" height="10" fill="rgb(255,20,97)" /><rect x="50" y="60" width="10" height="10" fill="rgb(20,97,90)" /><rect x="60" y="60" width="10" height="10" fill="rgb(97,90,221)" /><rect x="70" y="60" width="10" height="10" fill="rgb(90,221,207)" /><rect x="80" y="60" width="10" height="10" fill="rgb(221,207,134)" /><rect x="90" y="60" width="10" height="10" fill="rgb(207,134,99)" /><rect x="0" y="70" width="10" height="10" fill="rgb(158,198,75)" /><rect x="10" y="70" width="10" height="10" fill="rgb(198,75,255)" /><rect x="20" y="70" width="10" height="10" fill="rgb(75,255,20)" /><rect x="30" y="70" width="10" height="10" fill="rgb(255,20,97)" /><rect x="40" y="70" width="10" height="10" fill="rgb(20,97,90)" /><rect x="50" y="70" width="10" height="10" fill="rgb(97,90,221)" /><rect x="60" y="70" width="10" height="10" fill="rgb(90,221,207)" /><rect x="70" y="70" width="10" height="10" fill="rgb(221,207,134)" /><rect x="80" y="70" width="10" height="10" fill="rgb(207,134,99)" /><rect x="90" y="70" width="10" height="10" fill="rgb(134,99,53)" /><rect x="0" y="80" width="10" height="10" fill="rgb(198,75,255)" /><rect x="10" y="80" width="10" height="10" fill="rgb(75,255,20)" /><rect x="20" y="80" width="10" height="10" fill="rgb(255,20,97)" /><rect x="30" y="80" width="10" height="10" fill="rgb(20,97,90)" /><rect x="40" y="80" width="10" height="10" fill="rgb(97,90,221)" /><rect x="50" y="80" width="10" height="10" fill="rgb(90,221,207)" /><rect x="60" y="80" width="10" height="10" fill="rgb(221,207,134)" /><rect x="70" y="80" width="10" height="10" fill="rgb(207,134,99)" /><rect x="80" y="80" width="10" height="10" fill="rgb(134,99,53)" /><rect x="90" y="80" width="10" height="10" fill="rgb(99,53,165)" /><rect x="0" y="90" width="10" height="10" fill="rgb(75,255,20)" /><rect x="10" y="90" width="10" height="10" fill="rgb(255,20,97)" /><rect x="20" y="90" width="10" height="10" fill="rgb(20,97,90)" /><rect x="30" y="90" width="10" height="10" fill="rgb(97,90,221)" /><rect x="40" y="90" width="10" height="10" fill="rgb(90,221,207)" /><rect x="50" y="90" width="10" height="10" fill="rgb(221,207,134)" /><rect x="60" y="90" width="10" height="10" fill="rgb(207,134,99)" /><rect x="70" y="90" width="10" height="10" fill="rgb(134,99,53)" /><rect x="80" y="90" width="10" height="10" fill="rgb(99,53,165)" /><rect x="90" y="90" width="10" height="10" fill="rgb(53,165,231)" /></svg>'

      const { pattern, owner } = await loadFixture(deployPattern);

      // Generate the pattern for a given tokenId before fetching the SVG
      await pattern.generatePattern(1, { gasLimit: 30000000 }); // Increase gas limit here

      const svg = await pattern.getSvgData();
      console.log(svg);  // This will log the actual SVG output to the console
      expect(svg).to.equal(P1_SVG);
    });
  })

});
